/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, FridgeItems as PrismaFridgeItems } from "@prisma/client";

export class FridgeItemsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FridgeItemsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.fridgeItems.count(args);
  }

  async fridgeItemsItems(
    args: Prisma.FridgeItemsFindManyArgs
  ): Promise<PrismaFridgeItems[]> {
    return this.prisma.fridgeItems.findMany(args);
  }
  async fridgeItems(
    args: Prisma.FridgeItemsFindUniqueArgs
  ): Promise<PrismaFridgeItems | null> {
    return this.prisma.fridgeItems.findUnique(args);
  }
  async createFridgeItems(
    args: Prisma.FridgeItemsCreateArgs
  ): Promise<PrismaFridgeItems> {
    return this.prisma.fridgeItems.create(args);
  }
  async updateFridgeItems(
    args: Prisma.FridgeItemsUpdateArgs
  ): Promise<PrismaFridgeItems> {
    return this.prisma.fridgeItems.update(args);
  }
  async deleteFridgeItems(
    args: Prisma.FridgeItemsDeleteArgs
  ): Promise<PrismaFridgeItems> {
    return this.prisma.fridgeItems.delete(args);
  }
}
