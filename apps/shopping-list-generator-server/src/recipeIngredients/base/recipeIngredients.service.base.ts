/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  RecipeIngredients as PrismaRecipeIngredients,
  Ingredients as PrismaIngredients,
  Recipes as PrismaRecipes,
} from "@prisma/client";

export class RecipeIngredientsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.RecipeIngredientsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.recipeIngredients.count(args);
  }

  async recipeIngredientsItems(
    args: Prisma.RecipeIngredientsFindManyArgs
  ): Promise<PrismaRecipeIngredients[]> {
    return this.prisma.recipeIngredients.findMany(args);
  }
  async recipeIngredients(
    args: Prisma.RecipeIngredientsFindUniqueArgs
  ): Promise<PrismaRecipeIngredients | null> {
    return this.prisma.recipeIngredients.findUnique(args);
  }
  async createRecipeIngredients(
    args: Prisma.RecipeIngredientsCreateArgs
  ): Promise<PrismaRecipeIngredients> {
    return this.prisma.recipeIngredients.create(args);
  }
  async updateRecipeIngredients(
    args: Prisma.RecipeIngredientsUpdateArgs
  ): Promise<PrismaRecipeIngredients> {
    return this.prisma.recipeIngredients.update(args);
  }
  async deleteRecipeIngredients(
    args: Prisma.RecipeIngredientsDeleteArgs
  ): Promise<PrismaRecipeIngredients> {
    return this.prisma.recipeIngredients.delete(args);
  }

  async getIngredient(parentId: string): Promise<PrismaIngredients | null> {
    return this.prisma.recipeIngredients
      .findUnique({
        where: { id: parentId },
      })
      .ingredient();
  }

  async getRecipe(parentId: string): Promise<PrismaRecipes | null> {
    return this.prisma.recipeIngredients
      .findUnique({
        where: { id: parentId },
      })
      .recipe();
  }
}
